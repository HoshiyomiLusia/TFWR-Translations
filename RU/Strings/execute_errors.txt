@error_code_after_block = Здесь не должно быть кода. Попробуйте удалить его или поставить на новую строку.
@error_wrong_number_args = {0} принимает {1} аргументов.
@error_expected_no_args = {0} не принимает никаких аргументов.
@error_wrong_args = Аргумент {0}. функции {1} был {2}. Это недопустимый аргумент.
@error_syntax_error_in_import = В импортированном модуле ошибка синтаксиса.
@error_module_not_found = Модуля с таким именем не существует. Имя должно соответствовать имени файла. Это имя отображается в верхней части окна.
@error_list_element_not_found = {0} не является элементом списка.
@error_set_element_not_found = {0} не является элементом множества.
@error_index_out_of_bounds = Индекс {0} был за пределами списка {1}.
@error_index_out_of_bounds2 = Индекс оказался за пределами списка.
@error_arith_assign_not_used_on_number = {0} можно использовать только с числами.
@error_bool_op_not_used_on_bool = Логический оператор можно использовать только с булевыми выражениями, которые оцениваются как `True` или `False`.
@error_bad_bin_operator = Оператор {0} нельзя использовать с операндами {1} и {2}.
@error_bad_unary_operator = Оператор {0} не может быть использован на {1}.
@error_index = {0} нельзя использовать как индекс на {1}.
@error_index_on_non_indexable = Вы не можете использовать индекс в {0}.
@error_zero_step = Размер шага не может быть нулём.
@error_index_on_tuple = Вы не можете назначить элемент кортежа, потому что кортежи неизменяемые.
@error_bad_key = {0} не может быть использован в качестве ключа.
@error_slice_dict = Нельзя нарезать dictionary.
@error_key = {0} не является ключом в dictionary.
@error_condition_not_bool = {0} не является допустимым условием. Условие должно быть булевым значением. Это означает, что оно должно быть выражением, которое всегда либо `True`, либо `False`.
@error_for_requires_iterable = {0} нельзя использовать в цикле for. Циклу for нужно передать последовательность для итерации. Пример:

`for i in range(5):`
Здесь range(5) возвращает последовательность `0,1,2,3,4`.
@error_no_loop_to_break = `break` можно использовать только внутри цикла.
@error_no_loop_to_continue = `continue` можно использовать только внутри цикла.
@error_no_function_to_return_from = `return` можно использовать только внутри функции.
@error_missing_unlock = Это нужно разблокировать, прежде чем использовать.
@error_missing_x_unlock = {0} нужно разблокировать перед использованием.
@error_name_not_defined = {0} никогда не был определён. Сначала ты должен присвоить значение переменной, прежде чем её использовать.
@error_missing_import = {0} никогда не был определен. Похоже, он определен в файле {1}. Вы забыли его импортировать?  
Если вы его импортировали, вероятно, у вас есть цикл импорта (см. страницу документации по импорту).
@error_missing_import_before_unlock = {0} никогда не был определён. Кажется, он определён в файле {1}. Вам нужно разблокировать импорты, чтобы иметь возможность импортировать что-то из других файлов.
@error_call_before_def = {0} не определена. Кажется, она определена в этом файле, но определение ещё не выполнено. Функции могут вызываться только после оператора `def`.
@error_not_a_function = Вы попытались вызвать что-то, что не является функцией. Обычная ошибка, которая может привести к этому, — наличие переменной с таким же именем, как у функции.
@error_invalid_const = {0} не существует.
@error_invalid_const2 = Этого не существует.
@error_max_stack_size_reached = Достигнут максимальный размер call stack. Скорее всего, это из-за слишком большого количества рекурсивных вызовов функции.
@error_max_comparison_depth = Достигнута максимальная глубина сравнения. Достигнута максимальная глубина сравнения. Это может произойти, например, если вы сравниваете списки, содержащие сами себя.
@error_assign_type_mismatch = Левая часть присваивания не соответствует правой части.
@error_too_many_values_to_unpack = Правая сторона не содержит достаточного количества значений для распаковки.
@error_not_enough_values = Правая сторона содержит слишком много значений для распаковки в левую сторону.
@error_empty_print = `print()` требует как минимум один аргумент.
@error_in_string = Невозможно проверить, есть ли {0} в строке.
@error_collection_changed_size_during_iteration = Размер этой коллекции нельзя изменить в цикле for, который проходит по ней. Это потому, что изменение размера коллекции сделает недействительным объект итератора, который использует цикл for.
@error_wrong_use_of_max = Не могу вычислить максимум из {0}.
@error_wrong_use_of_min = Не могу вычислить min из {0}.
@error_function_as_condition = Пытаемся проверить, является ли функция {0} `True`. Это сам объект функции, а не возвращаемое значение функции. Вы хотели вызвать функцию с помощью оператора вызова `()`? 

В Python объекты функций считаются истинными, что означает, что если вы используете их как условия, они сработают как `True`, поэтому Python не выдаст вам это сообщение об ошибке. 

Это защитное сообщение об ошибке, вы можете отключить его в настройках, если оно мешает.
@error_function_in_operator = Пытаешься использовать {1} на функции {0}. Это сам объект функции, а не возвращаемое значение функции. Ты хотел вызвать функцию с оператором вызова `()`? 

Это сообщение ошибки-защиты, ты можешь отключить его в настройках, если оно тебе мешает.
@error_zero_step_size = Размер шага не может быть равен 0.
@error_sequence_too_large = Последовательность была слишком большой, чтобы скопировать.
@error_invalid_sim_unlocks = Начальные открытия были недействительными. Это должна быть последовательность открытий или кортежей вида `(Unlock.Carrots, 3)`.
@error_invalid_sim_items = Начальные предметы недействительны. Это должен быть dict, который отображает предметы в числа, как `{Items.Hay : 100}`.
@error_invalid_sim_globals = Начальные глобальные переменные были недопустимы. Нужно использовать dict, который отображает имена переменных на значения, как `{"x" : 42}`.
@error_division_by_zero = О нет! Ты разделил на `0`. Ты едва выжил после этого.
@error_negative_use_item = Количество используемых предметов должно быть как минимум `1`. Было {0}.
@error_use_before_assign = Попытался прочитать переменную {0} до того, как ей было присвоено значение.  
Если хочешь изменить глобальную переменную, используй ключевое слово global, чтобы записать в глобальную область видимости.

`global x
x += 1`
@error_attribute_on_non_module = Невозможно присвоить атрибут на {0}.
@error_file_not_found = Файл {0} не существует.
@error_max_drones_reached = Лимит дронов был превышен.
@error_dino_hat_already_used = Есть только одна шляпа динозавра, и она уже используется. Вы не можете использовать её на втором дроне.
@error_invalid_drone_id = Дрон с ID {0} не найден.