@error_code_after_block = Здесь не должно быть кода. Попробуйте удалить его или перенести на новую строку.
@error_wrong_number_args = {0} принимает {1} аргументов.
@error_expected_no_args = {0} не принимает аргументов.
@error_wrong_args = Аргумент {0} для {1} был {2}. Это недопустимый аргумент.
@error_syntax_error_in_import = Импортированный модуль содержит синтаксическую ошибку.
@error_module_not_found = Модуль с таким именем не существует. Имя должно совпадать с именем файла. Это имя, отображаемое в верхней части окна.
@error_list_element_not_found = {0} не является элементом списка.
@error_set_element_not_found = {0} не является элементом множества.
@error_index_out_of_bounds = Индекс {0} вышел за пределы списка {1}.
@error_index_out_of_bounds2 = Индекс вышел за пределы списка.
@error_arith_assign_not_used_on_number = {0} можно использовать только с числами.
@error_bool_op_not_used_on_bool = Логический оператор можно использовать только с логическими выражениями, которые вычисляются как `True` или `False`.
@error_bad_bin_operator = Оператор {0} не может быть применён к операндам {1} и {2}.
@error_bad_unary_operator = Оператор {0} не может быть применён к {1}.
@error_index = {0} не может быть использован как индекс для {1}.
@error_index_on_non_indexable = Нельзя получить элемент по индексу из {0}.
@error_zero_step = Размер шага не может быть равен нулю.
@error_index_on_tuple = Нельзя присвоить значение элементу кортежа, потому что кортежи неизменяемы.
@error_bad_key = {0} не может быть использован как ключ.
@error_slice_dict = Нельзя делать срез словарей.
@error_key = {0} не является ключом в словаре.
@error_condition_not_bool = {0} не является допустимым условием. Условие должно быть логическим значением. Это означает, что оно должно быть выражением, которое всегда либо `True`, либо `False`.
@error_for_requires_iterable = Нельзя перебирать {0} в цикле for. Циклу for должна быть предоставлена последовательность для перебора. Пример:

`for i in range(5):`
Здесь range(5) возвращает последовательность `0,1,2,3,4`.
@error_no_loop_to_break = `break` можно использовать только внутри цикла.
@error_no_loop_to_continue = `continue` можно использовать только внутри цикла.
@error_no_function_to_return_from = `return` можно использовать только внутри функции.
@error_missing_unlock = Это должно быть разблокировано перед использованием.
@error_missing_x_unlock = {0} должно быть разблокировано перед использованием.
@error_name_not_defined = {0} не определено. Вы должны присвоить значение переменной перед её использованием.
@error_missing_import = {0} не определено. Похоже, оно определено в файле {1}. Вы забыли его импортировать? 
Если вы его импортировали, у вас, вероятно, циклический импорт (см. страницу документации по импорту).
@error_missing_import_before_unlock = {0} не определено. Похоже, оно определено в файле {1}. Вам нужно разблокировать импорты, чтобы иметь возможность импортировать из других файлов.
@error_call_before_def = {0} не определено. Похоже, оно определено где-то в этом файле, но определение ещё не было выполнено. Функции можно вызывать только после инструкции `def`.
@error_not_a_function = Вы пытались вызвать то, что не является функцией. Распространённая ошибка, которая может к этому привести, — это наличие переменной с тем же именем, что и функция.
@error_invalid_const = {0} не существует.
@error_invalid_const2 = Этого не существует.
@error_max_stack_size_reached = Достигнут максимальный размер стека вызовов. Скорее всего, это произошло из-за слишком большого количества рекурсивных вызовов функций.
@error_max_comparison_depth = Достигнута максимальная глубина сравнения. Это может произойти, например, если вы сравниваете списки, которые содержат сами себя.
@error_assign_type_mismatch = Левая часть присваивания не соответствует правой.
@error_too_many_values_to_unpack = Правая часть не содержит достаточного количества значений для распаковки.
@error_not_enough_values = Правая часть содержит слишком много значений для распаковки в левую.
@error_empty_print = `print()` требует хотя бы один аргумент.
@error_in_string = Невозможно проверить, содержится ли {0} в строке.
@error_collection_changed_size_during_iteration = Размер этой коллекции не может быть изменён внутри цикла for, который её перебирает. Это связано с тем, что изменение размера коллекции сделает недействительным объект-итератор, который использует цикл for.
@error_wrong_use_of_max = Невозможно вычислить максимум для {0}.
@error_wrong_use_of_min = Невозможно вычислить минимум для {0}.
@error_function_as_condition = Попытка проверить, является ли функция {0} `True`. Это сам объект функции, а не её возвращаемое значение. Вы имели в виду вызов функции с помощью оператора вызова `()`? 

В Python объекты функций являются истинными, что означает, что если вы используете их в качестве условий, они работают как `True`, поэтому Python не выдал бы вам это сообщение об ошибке. 

Это защитное сообщение об ошибке, вы можете отключить его в настройках, если оно вам мешает.
@error_function_in_operator = Попытка использовать {1} для функции {0}. Это сам объект функции, а не её возвращаемое значение. Вы имели в виду вызов функции с помощью оператора вызова `()`? 

Это защитное сообщение об ошибке, вы можете отключить его в настройках, если оно вам мешает.
@error_zero_step_size = Размер шага не может быть равен 0.
@error_sequence_too_large = Последовательность слишком велика для копирования.
@error_invalid_sim_unlocks = Начальные разблокировки недействительны. Это должна быть последовательность разблокировок или кортежей вида `(Unlock.Carrots, 3)`.
@error_invalid_sim_items = Начальные предметы недействительны. Это должен быть словарь, сопоставляющий предметы с числами, например `{Items.Hay : 100}`.
@error_invalid_sim_globals = Начальные глобальные переменные недействительны. Это должен быть словарь, сопоставляющий имена переменных со значениями, например `{"x" : 42}`.
@error_division_by_zero = О нет! Вы разделили на `0`. Вы едва это пережили.
@error_negative_use_item = Количество используемых предметов должно быть не менее `1`. Было {0}.
@error_use_before_assign = Попытка прочитать переменную {0} до того, как ей было присвоено значение. 
Если вы хотите изменить глобальную переменную, вы должны использовать ключевое слово `global`, чтобы записывать в глобальную область видимости.

`global x
x += 1`
@error_attribute_on_non_module = Нельзя присвоить атрибут {0}.
@error_file_not_found = Файл {0} не существует.
@error_max_drones_reached = Превышен лимит дронов.
@error_dino_hat_already_used = Есть только одна шляпа динозавра, и она уже используется. Вы не можете использовать её на втором дроне.
@error_invalid_drone_id = Нет дрона с ID {0}.
@error_invalid_handle = {0} больше не существует.